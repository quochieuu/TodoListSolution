@{
    ViewData["Title"] = "Home Page";
}


<div class="today"></div>
<div class="row justify-content-center">
    <div class="col-md-4 col-md-offset-4 col-xs-6 col-xs-offset-3">
        <div class="add-control">
            <div class="form-group has-feedback">
                <input type="text" class="form-control" placeholder="✍️ Add item..." />
                <i class="fa fa-plus form-control-feedback add-btn" title="Add item"></i>
            </div>
        </div>
        @*<p class="err text-danger text-center hidden"><i class="fa fa-warning"></i> Oops! Please, enter name item</p>
        <p class="no-items text-muted text-center hidden"><i class="fa fa-ban"></i></p>*@
        <ul class="todo-list">
        </ul>
    </div>
</div>

@section Scripts {
    <script>

        var state = [];

        function setDefaultState() {
            var id = generateID();
            var baseState = {};

            baseState[id] = {};
            syncState(baseState);
        }

        function generateID() {
            var randLetter = String.fromCharCode(65 + Math.floor(Math.random() * 26));
            return randLetter + Date.now();
        }

        function pushToState(title, status, id) {
            var baseState = getState();
            baseState[id] = { id: id, title: title, status: status };
            syncState(baseState);
        }

        function setToDone(id) {
            var baseState = getState();
            $.ajax({
                type: 'GET',
                url: '/task/mark-completed/' + id,
                contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                success: function (res) {
                    console.log(res);
                },
                error: function (error) {
                    console.log('Failed ');
                }
            })
        }

        function deleteTodo(id) {
            console.log(id)
            var baseState = getState();
            delete baseState[id]
            syncState(baseState)
        }

        function resetState() {
            localStorage.setItem("state", null);
        }

        function syncState(state) {
            localStorage.setItem("state", JSON.stringify(state));
        }

        function getState() {
            return JSON.parse(localStorage.getItem("state"));
        }

        function addItem(text, status, id, noUpdate) {
            var id = id ? id : generateID();
            var c = status === true ? "danger" : false;
            var item =
                '<li data-id="' +
                id +
                '" class="animated flipInX ' +
                c +
                '"><div class="checkbox"><span class="close"><i class="fa fa-times"></i></span><label><span class="checkbox-mask"></span><input type="checkbox" />' +
                text +
                "</label></div></li>";

            var isError = $(".form-control").hasClass("hidden");

            if (text === "") {
                $(".err")
                    .removeClass("hidden")
                    .addClass("animated bounceIn");
            } else {
                $(".err").addClass("hidden");
                $(".todo-list").append(item);
            }

            $(".refresh").removeClass("hidden");

            $(".no-items").addClass("hidden");

            $(".form-control")
                .val("")
                .attr("placeholder", "✍️ Add item...");
            setTimeout(function () {
                $(".todo-list li").removeClass("animated flipInX");
            }, 500);

            if (!noUpdate) {
                pushToState(text, false, id);
            }
        }

        function getListTask() {
            $.ajax({
                type: 'GET',
                url: '/task',
                contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                success: function (res) {
                    console.log(res);
                    if (res) {
                        console.log("Fetch list tasks sucessful");
                        $(".todo-list").html("");
                        res.forEach(function(element) {
                            addItem(element.title, element.isCompleted, element.id, true);
                        })
                    } else {
                        console.log("Error when fetched get list tasks API");
                    }
                },
                error: function (error) {
                    console.log('Failed ');
                }
            })
        }

        function deleteTask(id) {
            $.ajax({
                type: 'GET',
                url: '/task/delete/' + id ,
                contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                success: function (res) {
                    console.log("Delete sucessful");
                },
                error: function (error) {
                    console.log('Failed ');
                }
            })
        }

        function refresh() {
            $(".todo-list li").each(function (i) {
                $(this)
                    .delay(70 * i)
                    .queue(function () {
                        $(this).addClass("animated bounceOutLeft");
                        $(this).dequeue();
                    });
            });

            setTimeout(function () {
                $(".todo-list li").remove();
                $(".no-items").removeClass("hidden");
                $(".err").addClass("hidden");
            }, 800);
        }

        $(function () {
            var err = $(".err"),
                formControl = $(".form-control"),
                isError = formControl.hasClass("hidden");

            if (!isError) {
                formControl.blur(function () {
                    err.addClass("hidden");
                });
            }


            $(".add-btn").on("click", function () {
                // Create new task
                $.ajax({
                type: 'POST',
                url: '/task/create',
                data: {
                        "title": $(".form-control").val()
                },
                contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                success: function (res) {
                    console.log(res);
                    if (res) {
                        console.log("Created new task sucessful");
                            addItem($(".form-control").val());
                        formControl.focus();
                    } else {
                        console.log("Error when fetched get list tasks API");
                    }
                },
                error: function (error) {
                    console.log('Failed ');
                }
            })
                getListTask()

            });

            $(".refresh").on("click", refresh);

            $(".todo-list").on("click", 'input[type="checkbox"]', function () {
                var li = $(this)
                    .parent()
                    .parent()
                    .parent();
                li.toggleClass("danger");
                li.toggleClass("animated flipInX");

                setToDone(li.data().id);

                setTimeout(function () {
                    li.removeClass("animated flipInX");
                }, 500);
            });

            $(".todo-list").on("click", ".close", function () {
                var box = $(this)
                    .parent()
                    .parent();

                if ($(".todo-list li").length == 1) {
                    box.removeClass("animated flipInX").addClass("animated                bounceOutLeft");
                    setTimeout(function () {
                        box.remove();
                        $(".no-items").removeClass("hidden");
                        $(".refresh").addClass("hidden");
                    }, 500);
                } else {
                    box.removeClass("animated flipInX").addClass("animated bounceOutLeft");
                    setTimeout(function () {
                        box.remove();
                    }, 500);
                }
                deleteTask(box.data().id)
                deleteTodo(box.data().id)
            });

            $(".form-control").keypress(function (e) {
                console.log("press enter event")
                if (e.which == 13) {
                    var itemVal = $(".form-control").val();
                    $.ajax({
                        type: 'POST',
                        url: '/task/create',
                        data: {
                            "title": $(".form-control").val()
                        },
                        contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                        success: function (res) {
                            getListTask();
                            console.log(res);
                            if (res) {
                                console.log("Created new task sucessful");
                                addItem($(".form-control").val());
                                formControl.focus();
                            } else {
                                console.log("Error when fetched get list tasks API");
                            }
                        },
                        error: function (error) {
                            console.log('Failed ');
                        }
                    })
                    getListTask();
                }
            });
            $(".todo-list").sortable();
            $(".todo-list").disableSelection();
        });

        var todayContainer = document.querySelector(".today");


        var d = new Date();


        var weekday = new Array(7);
        weekday[0] = "Sunday 🖖";
        weekday[1] = "Monday 💪😀";
        weekday[2] = "Tuesday 😜";
        weekday[3] = "Wednesday 😌☕️";
        weekday[4] = "Thursday 🤗";
        weekday[5] = "Friday 🍻";
        weekday[6] = "Saturday 😴";


        var n = weekday[d.getDay()];


        var randomWordArray = Array(
            "Oh my, it's ",
            "Whoop, it's ",
            "Happy ",
            "Seems it's ",
            "Awesome, it's ",
            "Have a nice ",
            "Happy fabulous ",
            "Enjoy your "
        );

        var randomWord =
            randomWordArray[Math.floor(Math.random() * randomWordArray.length)];


        todayContainer.innerHTML = randomWord + n;

        $(document).ready(function () {

            // Get list tasks
            // Fetch API to get list tasks
            getListTask()


            var mins, secs, update;

            init();
            function init() {
                (mins = 25), (secs = 59);
            }


            set();
            function set() {
                $(".mins").text(mins);
            }


            $("#start").on("click", start_timer);
            $("#reset").on("click", reset);
            $("#inc").on("click", inc);
            $("#dec").on("click", dec);

            function start_timer() {

                set();

                $(".dis").attr("disabled", true);

                $(".mins").text(--mins);
                $(".separator").text(":");
                update_timer();

                update = setInterval(update_timer, 1000);
            }

            function update_timer() {
                $(".secs").text(secs);
                --secs;
                if (mins == 0 && secs < 0) {
                    reset();
                } else if (secs < 0 && mins > 0) {
                    secs = 59;
                    --mins;
                    $(".mins").text(mins);
                }
            }


            function reset() {
                clearInterval(update);
                $(".secs").text("");
                $(".separator").text("");
                init();
                $(".mins").text(mins);
                $(".dis").attr("disabled", false);
            }


            function inc() {
                mins++;
                $(".mins").text(mins);
            }


            function dec() {
                if (mins > 1) {
                    mins--;
                    $(".mins").text(mins);
                } else {
                    alert("This is the minimum limit.");
                }
            }
        });


    </script>
}